{"version":3,"sources":["components/WeightInput.js","components/BodyFatInput.js","components/ActivityInput.js","components/TdeeModifier.js","components/MacroSliders.js","components/BodyResults.js","components/App.js","index.js"],"names":["WeightInput","props","className","htmlFor","type","inputMode","pattern","value","onChange","BodyFatInput","ActivityInput","renderActivityInformation","activity","this","step","React","Component","TdeeModifier","style","marginBottom","marginRight","onSelect","data-toggle","aria-haspopup","aria-expanded","onInput","aria-label","MacroSliders","state","carbsPercentage","fatPercentage","proteinPercentage","renderProteinSlider","protein","classes","warning","min","max","handleProteinSlider","renderCarbsSlider","carbs","handleCarbsSlider","renderFatSlider","fat","handleFatSlider","event","percentLeft","parseInt","target","setState","tdee","BodyResults","modifier","handleSelect","handleInput","lbm","bmr","weight","bodyFat","weightLBS","App","handleWeightInput","handleBodyFatInput","handleActivityInput","maxWidth","textAlign","margin","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9b4f0dc.chunk.js","sourcesContent":["import React from 'react';\n\nconst WeightInput = props => {\n    return (\n        <div className=\"form-group col-xs-6\">\n            <label htmlFor=\"weight\">Weight (lbs):</label>\n            <input \n                type=\"number\" inputMode=\"numeric\" pattern=\"[0-9]*\"\n                className=\"form-control\" \n                value={props.value} \n                onChange={props.onChange} />\n        </div>\n    );\n}\n\nexport default WeightInput;","import React from 'react';\n\nconst BodyFatInput = props => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor=\"body-fat\">Body Fat Percentage:</label>\n            <input \n                type=\"number\" inputMode=\"numeric\" pattern=\"[0-9]*\"\n                className=\"form-control\" \n                value={props.value} \n                onChange={props.onChange} />\n        </div>\n    );\n}\n\nexport default BodyFatInput;","import React from 'react';\n\nclass ActivityInput extends React.Component {\n\n    renderActivityInformation = (activity) => {\n        if (activity >= 1 && activity <= 1.2) {\n            return <small className=\"text-danger\"><strong>Sedentary:</strong> Little or no exercise</small>;\n        } else if (activity > 1.2 && activity <= 1.375) {\n            return <small className=\"text-danger\"><strong>Lightly Active:</strong> Light exercise/sports 1 to 3 days per week</small>;\n        } else if (activity > 1.375 && activity <= 1.55) {\n            return <small className=\"text-danger\"><strong>Moderately Active:</strong> Moderate exercise/sports 3 to 5 days per week</small>;\n        } else if (activity > 1.55 && activity <= 1.725) {\n            return <small className=\"text-danger\"><strong>Very Active:</strong> Hard exercise/sports 6 to 7 days per week</small>;\n        } else if (activity > 1.725 && activity <= 1.9) {\n            return <small className=\"text-danger\"><strong>Extremely Active:</strong> Very hard exercise/sports 6 to 7 days per week &amp; physical job</small>;\n        } else {\n            return <small className=\"text-danger\"><strong>Recommended value between 1 and 1.9</strong></small>;\n        }\n    }\n    render() {\n        return (\n            <div className=\"form-group \">\n                <label htmlFor=\"activity-level\">Activity Level: {this.renderActivityInformation(this.props.activity)}</label>\n                <input \n                    type=\"number\" \n                    className=\"form-control\" \n                    value={this.props.activity} \n                    onChange={this.props.onChange}\n                    step=\"0.1\" />\n            </div>\n        );\n    }\n}\n\nexport default ActivityInput;\n\n/*\n<ul className=\"small\">\n<li><strong>1.2</strong> = little or no exercise</li>\n<li><strong>1.375</strong> = light exercise 1 to 3 days per week</li>\n<li><strong>1.55</strong> = moderate exercise 3 to 5 days per week</li>\n<li><strong>1.725</strong> = hard exercise 6 to 7 days per week</li>\n<li><strong>1.9</strong> = very hard exercise 6 to 7 days per week &amp; physical job</li>\n</ul>\n*/","import React from 'react';\n\nconst TdeeModifier = props => {\n    return (\n        <div className=\"input-group\" style={{marginBottom:'20px'}}>\n            <div className=\"input-group-prepend\">\n                <select style={{marginRight:'10px'}} value={props.value} onChange={props.onSelect} className=\"btn btn-outline-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    <option className=\"dropdown-item\" value=\"surplus\">Surplus (Bulking)</option>\n                    <option className=\"dropdown-item\" value=\"deficit\">Deficit (Cutting)</option>\n                </select>\n                <span className=\"input-group-text rounded-left\">{props.value === 'surplus' ? '+' : '-'}</span>\n            </div>\n            <input onChange={props.onInput} type=\"number\" inputMode=\"numeric\" pattern=\"[0-9]*\" className=\"form-control\" aria-label=\"Surplus Deficit Amount\" />\n            <div className=\"input-group-append\">\n                <span className=\"input-group-text\">%</span>\n            </div>\n        </div>\n    );\n}\n\nexport default TdeeModifier;","import React from 'react';\nimport './macroSliders.css';\n\nclass MacroSliders extends React.Component {\n    state = {\n        carbsPercentage: 35,\n        fatPercentage: 30,\n        proteinPercentage: 35\n    }\n    renderProteinSlider = (protein, proteinPercentage) => {\n        let classes = \"form-group alert\";\n        let warning = false;\n        if (proteinPercentage < 30 || proteinPercentage > 55) {\n            classes = \"form-group alert alert-danger\";\n            warning = true;\n        }\n        return (\n            <div className={classes} >\n                <label htmlFor=\"formControlRange\">\n                    Protein <strong>{protein ? `${protein}g (${proteinPercentage}%)` : '0g'}\n                    </strong>\n                    {warning ? <small> *Recommended between 30-55%</small> : ''}\n            </label>\n            <input \n                min=\"0\" \n                max=\"100\"\n                value={proteinPercentage}\n                onChange={this.handleProteinSlider} \n                type=\"range\" \n                className=\"form-control-range\"\n            />\n            </div>\n        );\n    }\n    renderCarbsSlider = (carbs, carbsPercentage) => {\n        let classes = \"form-group alert\";\n        let warning = false;\n        if (carbsPercentage < 30 || carbsPercentage > 55) {\n            classes = \"alert alert-danger\";\n            warning = true;\n        }\n        return (\n            <div className={classes}>\n                <label htmlFor=\"formControlRange\">\n                    Carbohydrates <strong>{carbs ? `${carbs}g (${carbsPercentage}%)` : '0g'}</strong>\n                    {warning ? <small> *Recommended between 30-55%</small> : ''}\n            </label>\n            <input \n                min=\"0\" \n                max=\"100\"\n                value={carbsPercentage}\n                onChange={this.handleCarbsSlider} \n                type=\"range\" \n                className=\"form-control-range\"\n            />\n            </div>\n        );\n    }\n    renderFatSlider = (fat, fatPercentage) => {\n        let classes = \"form-group alert\";\n        let warning = false;\n        if (fatPercentage < 10 || fatPercentage > 35) {\n            classes = \"alert alert-danger\";\n            warning = true;\n        }\n        return (\n            <div className={classes}>\n                <label  htmlFor=\"formControlRange\">\n                    Fat <strong>{fat ? `${fat}g (${fatPercentage}%)` : '0g'}</strong>\n                    {warning ? <small> *Recommended between 10-35%</small> : ''}\n            </label>\n            <input \n                min=\"0\" \n                max=\"100\"\n                value={fatPercentage}\n                onChange={this.handleFatSlider} \n                type=\"range\" \n                className=\"form-control-range\"\n            />\n            </div>\n        );\n    }\n    handleProteinSlider = event => {\n        let percentLeft = 100;\n        const proteinPercentage = parseInt(event.target.value);\n        percentLeft -= proteinPercentage;\n        const carbsPercentage = parseInt(percentLeft * .65);\n        const fatPercentage = parseInt(percentLeft * .35);\n        this.setState({ proteinPercentage, carbsPercentage, fatPercentage });\n    }\n    handleCarbsSlider = event => {\n        let percentLeft = 100;\n        const carbsPercentage = parseInt(event.target.value);\n        percentLeft -= carbsPercentage;\n        const proteinPercentage = parseInt(percentLeft * .65);\n        const fatPercentage = parseInt(percentLeft * .35);\n        this.setState({ proteinPercentage, carbsPercentage, fatPercentage });\n    }\n    handleFatSlider = event => {\n        let percentLeft = 100;\n        const fatPercentage = parseInt(event.target.value);\n        percentLeft -= fatPercentage;\n        const proteinPercentage = parseInt(percentLeft * .55);\n        const carbsPercentage = parseInt(percentLeft * .45);\n        this.setState({ proteinPercentage, carbsPercentage, fatPercentage });\n    }\n    render() {\n        const fat = this.props.tdee * (this.state.fatPercentage/100) / 9;\n        const carbs = this.props.tdee * (this.state.carbsPercentage/100) / 4;\n        const protein = this.props.tdee * (this.state.proteinPercentage/100) / 4;\n        return (\n            <div>\n                {this.renderFatSlider(parseInt(fat), this.state.fatPercentage)}\n                {this.renderCarbsSlider(parseInt(carbs), this.state.carbsPercentage)}\n                {this.renderProteinSlider(parseInt(protein), this.state.proteinPercentage)}\n            </div>\n        );\n    }\n}\n\nexport default MacroSliders;","import React from 'react';\nimport TdeeModifier from './TdeeModifier';\nimport MacroSliders from './MacroSliders';\n\nclass BodyResults extends React.Component {\n    state = {\n        type: 'surplus',\n        modifier: ''\n    }\n    handleSelect = event => {\n        if (event.target.value === 'surplus') {\n            this.setState({ type: 'surplus' });\n        } else if (event.target.value === 'deficit') {\n            this.setState({ type: 'deficit' })\n        }\n    }\n    handleInput = event => {\n        const modifier = event.target.value / 100;\n        this.setState({ modifier });\n    }\n    render() {\n        let lbm, bmr, tdee = '';\n        if (this.props.weight && this.props.bodyFat) {\n            // Calculate lean body mass\n            const weightLBS = this.props.weight;\n            const bodyFatDecimal = this.props.bodyFat / 100;\n            lbm = weightLBS - ( weightLBS * bodyFatDecimal);\n            // Calculate BMR\n            const leanBodyMassKG = lbm / 2.2046;\n            bmr = 370 + 21.6 * leanBodyMassKG;\n            // Calculate TDEE\n            // If activity modifier exists\n            if (this.props.activity) {\n                tdee = bmr * this.props.activity;\n            } else {\n                tdee = bmr;\n            }\n            // If tdee modifier exists\n            if (this.state.type === 'surplus') {\n                tdee = tdee + (tdee * this.state.modifier);\n            } else if (this.state.type === 'deficit') {\n                tdee = tdee - (tdee * this.state.modifier);\n            }\n        }\n\n        return (\n            <div>\n            <div className=\"row\">\n                <div className=\"col-lg\">\n            <TdeeModifier tdee={tdee} value={this.state.type} onSelect={this.handleSelect} onInput={this.handleInput} />\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item\">\n                LBM: <strong>{lbm ? `${parseInt(lbm)} lbs` : ''}</strong>\n                </li>\n                <li className=\"list-group-item\">\n                BMR: <strong>{bmr ? `${parseInt(bmr)} cals` : ''}</strong>\n                </li>\n                <li className=\"list-group-item\">\n                TDEE: <strong>{tdee ? `${parseInt(tdee)} cals` : ''}</strong>\n                </li>\n            </ul>\n            </div>\n            <div className=\"col-lg\">\n            <MacroSliders tdee={tdee} />\n            </div>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default BodyResults;","import React from 'react';\nimport WeightInput from './WeightInput';\nimport BodyFatInput from './BodyFatInput';\nimport ActivityInput from './ActivityInput';\nimport BodyResults from './BodyResults';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            weight:'',\n            bodyFat:'',\n            activity: 1\n        }\n    }\n    handleWeightInput = event => {\n        this.setState({ weight: event.target.value });\n    }\n    handleBodyFatInput = event => {\n        this.setState({ bodyFat: event.target.value });\n    }\n    handleActivityInput = event => {\n        this.setState({ activity: event.target.value });\n    }\n    render() {\n        const {weight, bodyFat, activity} = this.state;\n        return (\n            <div className=\"container\" style={{maxWidth:\"800px\"}}>\n                <h1 style={{textAlign:\"center\", margin:\"20px 0 30px 0\"}}>Calorie Calculator</h1>\n                <div className=\"row\">\n                    <div className=\"col-sm\">\n                        <WeightInput value={weight} onChange={this.handleWeightInput} />\n                    </div>\n                    <div className=\"col-sm\">\n                        <BodyFatInput value={bodyFat} onChange={this.handleBodyFatInput} />\n                    </div>\n                </div>\n                    <ActivityInput activity={activity} onChange={this.handleActivityInput} />\n                    <BodyResults weight={weight} bodyFat={bodyFat} activity={activity} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n//fix number inputs mobile keyboards\n//add little Information toggle on confusing inputs\n//fix carbs slider from moving on mobile\n\n//  if input.length is >= 2\n    //  put decimal after first int","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}