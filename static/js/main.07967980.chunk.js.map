{"version":3,"sources":["components/WeightInput.js","components/BodyFatInput.js","components/ActivityInput.js","components/TdeeModifier.js","components/MacroSliders.js","components/BodyResults.js","components/App.js","index.js"],"names":["WeightInput","props","className","htmlFor","type","inputMode","pattern","value","onChange","BodyFatInput","ActivityInput","activity","isInBetween","num","greaterThan","LessThan","step","style","margin","float","orient","min","max","TdeeModifier","marginBottom","marginRight","cursor","width","onSelect","data-toggle","aria-haspopup","aria-expanded","fontFamily","textAlign","onInput","aria-label","MacroSliders","useState","carbsPercentage","setCarbsPercentage","fatPercentage","setFatPercentage","proteinPercentage","setProteinPercentage","setWidth","useEffect","window","innerWidth","addEventListener","handleProteinSlider","event","percentLeft","parseInt","target","handleCarbsSlider","handleFatSlider","fat","tdee","carbs","protein","classes","warning","renderFatSlider","renderCarbsSlider","renderProteinSlider","BodyResults","lbm","bmr","setType","modifier","setModifier","weight","bodyFat","color","App","setWeight","setBodyFat","setActivity","maxWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07967980.chunk.js","sourcesContent":["import React from 'react';\n\nconst WeightInput = props => {\n  return (\n    <div className=\"form-group col-xs-6\">\n      <label htmlFor=\"weight\">Weight (lbs):</label>\n      <input \n        type=\"number\" inputMode=\"numeric\" pattern=\"[0-9]*\"\n        className=\"form-control\" \n        value={props.value} \n        onChange={props.onChange} />\n    </div>\n  );\n}\n\nexport default WeightInput;","import React from 'react';\n\nconst BodyFatInput = props => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"body-fat\">Body Fat Percentage (%):</label>\n      <input \n          type=\"number\" inputMode=\"numeric\" pattern=\"[0-9]*\"\n          className=\"form-control\" \n          value={props.value} \n          onChange={props.onChange} />\n    </div>\n  );\n}\n\nexport default BodyFatInput;","import React from 'react';\nimport './style.css';\n\nconst ActivityInput = props => {\n  const {activity} = props;\n  \n  const isInBetween = (num, greaterThan, LessThan) => {\n    if (num > greaterThan && num <= LessThan) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"activity-level\">Activity Level: </label>\n      <input \n          type=\"number\" \n          className=\"form-control\" \n          value={activity} \n          onChange={props.onChange}\n          step=\"0.1\" />\n      <div style={{margin:\"25px 0\"}} className=\"col-sm center-vert\">\n          <input style={{float:\"left\"}}\n              type=\"range\" \n              orient=\"vertical\" \n              value={activity}\n              min=\"1\"\n              max=\"1.95\"\n              step=\"0.025\"\n              onChange={props.onChange}\n              />\n        <ul className=\"small center-vert\">\n          <li className={isInBetween(activity, 1.75, 1.99) ? 'selected' : null}>\n            <strong>1.9 = Extremely Active<br /></strong>\n            {isInBetween(activity, 1.75, 1.99) ? '10+ hours of exercise or sports per week' : null}\n          </li>\n          <li className={isInBetween(activity, 1.55, 1.75) ? 'selected' : null}>\n            <strong>1.7 = Very Active<br /></strong>\n            {isInBetween(activity, 1.55, 1.75) ? '7 to 9 hours of exercise or sports per week' : null}\n          </li>\n          <li className={isInBetween(activity, 1.35, 1.55) ? 'selected' : null}>\n            <strong>1.45 = Moderately Active<br /></strong>\n            {isInBetween(activity, 1.35, 1.55) ? '4 to 6 hours of exercise or sports per week' : null}\n          </li>\n          <li className={isInBetween(activity, 1.15, 1.35) ? 'selected' : null}>\n            <strong>1.3 = Lightly Active<br /></strong>{isInBetween(activity, 1.15, 1.35) ? '1 to 3 hours of exercise or sports per week' : null}\n          </li>\n          <li className={activity <= 1.15 ? 'selected' : null}>\n            <strong>1.15 = Sedentary<br /></strong>\n            {activity <= 1.15 ? 'Little to no exercise or sports per week' : null}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default ActivityInput;\n\n\n\n /*const renderActivityInformation = (activity) => {\n    if (activity >= 1 && activity <= 1.2) {\n        return <small className=\"text-danger\"><strong>Sedentary:</strong> Little or no exercise</small>;\n    } else if (activity > 1.2 && activity <= 1.375) {\n        return <small className=\"text-danger\"><strong>Lightly Active:</strong> Light exercise/sports 1 to 3 days per week</small>;\n    } else if (activity > 1.375 && activity <= 1.55) {\n        return <small className=\"text-danger\"><strong>Moderately Active:</strong> Moderate exercise/sports 3 to 5 days per week</small>;\n    } else if (activity > 1.55 && activity <= 1.725) {\n        return <small className=\"text-danger\"><strong>Very Active:</strong> Hard exercise/sports 6 to 7 days per week</small>;\n    } else if (activity > 1.725 && activity <= 1.9) {\n        return <small className=\"text-danger\"><strong>Extremely Active:</strong> Very hard exercise/sports 6 to 7 days per week &amp; physical job</small>;\n    } else {\n        return <small className=\"text-danger\"><strong>Recommended value between 1 and 1.9</strong></small>;\n    }\n  }*/\n","import React from 'react';\n\nconst TdeeModifier = props => {\n  return (\n    <div className=\"row\">\n      <div className=\"col-7\">\n        <div className=\"input-group\" style={{marginBottom:'20px'}}>\n          <select style={{marginRight:'10px', cursor:'pointer', width:\"100%\"}} value={props.value} onChange={props.onSelect} className=\"custom-select\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            <option className=\"dropdown-item\" value=\"none\">No Preset (Maintaining)</option>\n            <option className=\"dropdown-item\" value=\"surplus\">Surplus (Bulking)</option>\n            <option className=\"dropdown-item\" value=\"deficit\">Deficit (Cutting)</option>\n          </select>\n        </div>\n      </div>\n      {props.value === 'none' ? null : \n        <div className=\"col\">\n          <div className=\"input-group\" style={{marginBottom:'20px'}}>\n            <div className=\"input-group-prepend\">\n              <span \n                style={{fontFamily:\"monospace\"}} \n                className={props.value === 'surplus' ? \"input-group-text rounded-left surplus\" \n                  : \"input-group-text rounded-left deficit\"}>\n                {props.value === 'none' ? '' : props.value === 'surplus' ? '+' : '-'}\n              </span>\n              </div>\n              <input \n                style={{textAlign:'center'}} onChange={props.onInput} \n                type=\"number\" inputMode=\"numeric\" pattern=\"[0-9]*\" \n                className={props.value === 'surplus' ? \"form-control surplus\" : \"form-control deficit\"}\n                aria-label=\"Surplus Deficit Amount\" />\n              <div className=\"input-group-append\">\n                <span \n                  className={props.value === 'surplus' ? \"input-group-text surplus\" : \"input-group-text deficit\"}>\n                    %\n                </span>\n              </div>\n            </div>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default TdeeModifier;","import React, { useState, useEffect } from 'react';\nimport './macroSliders.css';\n\nconst MacroSliders = props => {\n  const [carbsPercentage, setCarbsPercentage] = useState(35);\n  const [fatPercentage, setFatPercentage] = useState(30);\n  const [proteinPercentage, setProteinPercentage] = useState(35); \n  const [width, setWidth] = useState(0);\n\n  useEffect( () => {\n    setWidth(window.innerWidth);\n    window.addEventListener('resize', setWidth);\n  }, [width]);\n    \n  const renderProteinSlider = (protein, proteinPercentage) => {\n    let classes = \"form-group alert\";\n    let warning = false;\n    if (proteinPercentage < 30 || proteinPercentage > 55) {\n      classes = \"form-group alert alert-danger\";\n      warning = true;\n    }\n    return (\n      <div className={classes} >\n        <label htmlFor=\"formControlRange\">\n          Protein <strong>{protein ? `${protein}g (${proteinPercentage}%)` : '0g'}</strong>\n          {warning ? <small>{width > 400 ? ' *Recommended' : ' *Rec.'} 30-55%</small> : ''}\n        </label>\n        <input \n          min=\"0\" \n          max=\"100\"\n          value={proteinPercentage}\n          onChange={handleProteinSlider} \n          type=\"range\" \n          className=\"form-control-range\"\n        />\n      </div>\n    );\n  }\n  const renderCarbsSlider = (carbs, carbsPercentage) => {\n    let classes = \"form-group alert\";\n    let warning = false;\n    if (carbsPercentage < 30 || carbsPercentage > 55) {\n        classes = \"alert alert-danger\";\n        warning = true;\n    }\n    return (\n      <div className={classes}>\n        <label htmlFor=\"formControlRange\">\n          Carbs <strong>{carbs ? `${carbs}g (${carbsPercentage}%)` : '0g'}</strong>\n          {warning ? <small>{width > 400 ? ' *Recommended' : ' *Rec.'} 30-55%</small> : ''}\n        </label>\n        <input \n          min=\"0\" \n          max=\"100\"\n          value={carbsPercentage}\n          onChange={handleCarbsSlider} \n          type=\"range\" \n          className=\"form-control-range\"\n        />\n      </div>\n    );\n  }\n  const renderFatSlider = (fat, fatPercentage) => {\n    let classes = \"form-group alert\";\n    let warning = false;\n    if (fatPercentage < 10 || fatPercentage > 35) {\n        classes = \"alert alert-danger\";\n        warning = true;\n    }\n    return (\n      <div className={classes}>\n        <label  htmlFor=\"formControlRange\">\n          Fat <strong>{fat ? `${fat}g (${fatPercentage}%)` : '0g'}</strong>\n          {warning ? <small>{width > 400 ? ' *Recommended' : ' *Rec.'} 10-35%</small> : ''}\n        </label>\n        <input \n          min=\"0\" \n          max=\"100\"\n          value={fatPercentage}\n          onChange={handleFatSlider} \n          type=\"range\" \n          className=\"form-control-range\"\n        />\n      </div>\n    );\n  }\n  const handleProteinSlider = event => {\n    let percentLeft = 100;\n    const proteinPercentage = parseInt(event.target.value);\n    percentLeft -= proteinPercentage;\n    const carbsPercentage = parseInt(percentLeft * .65);\n    const fatPercentage = parseInt(percentLeft * .35);\n    setProteinPercentage(proteinPercentage);\n    setCarbsPercentage(carbsPercentage);\n    setFatPercentage(fatPercentage);\n    }\n  const handleCarbsSlider = event => {\n    let percentLeft = 100;\n    const carbsPercentage = parseInt(event.target.value);\n    percentLeft -= carbsPercentage;\n    const proteinPercentage = parseInt(percentLeft * .65);\n    const fatPercentage = parseInt(percentLeft * .35);\n    setProteinPercentage(proteinPercentage);\n    setCarbsPercentage(carbsPercentage);\n    setFatPercentage(fatPercentage);\n    }\n  const handleFatSlider = event => {\n    let percentLeft = 100;\n    const fatPercentage = parseInt(event.target.value);\n    percentLeft -= fatPercentage;\n    const proteinPercentage = parseInt(percentLeft * .55);\n    const carbsPercentage = parseInt(percentLeft * .45);\n    setProteinPercentage(proteinPercentage);\n    setCarbsPercentage(carbsPercentage);\n    setFatPercentage(fatPercentage);\n    }\n  const fat = props.tdee * (fatPercentage/100) / 9;\n  const carbs = props.tdee * (carbsPercentage/100) / 4;\n  const protein = props.tdee * (proteinPercentage/100) / 4;\n  return (\n    <div>\n      {renderFatSlider(parseInt(fat), fatPercentage)}\n      {renderCarbsSlider(parseInt(carbs), carbsPercentage)}\n      {renderProteinSlider(parseInt(protein), proteinPercentage)}\n    </div>\n  );\n}\n\nexport default MacroSliders;","import React, { useState } from 'react';\nimport TdeeModifier from './TdeeModifier';\nimport MacroSliders from './MacroSliders';\n\nconst BodyResults = props => {\n  const [type, setType] = useState('none');\n  const [modifier, setModifier] = useState('');\n\n  const handleSelect = event => {\n    setType(event.target.value);\n    if (event.target.value === 'none') {\n      setModifier('');\n    }\n  }\n  const handleInput = event => {\n    setModifier( event.target.value / 100 );\n  }\n\n  let lbm, bmr, tdee = '';\n  const {weight, bodyFat, activity} = props;\n  if (weight && bodyFat) {\n    // Calculate lean body mass\n      const weightLBS = weight;\n      const bodyFatDecimal = bodyFat / 100;\n      lbm = weightLBS - ( weightLBS * bodyFatDecimal);\n    // Calculate BMR\n      const leanBodyMassKG = lbm / 2.2046;\n      bmr = 370 + 21.6 * leanBodyMassKG;\n    // Calculate TDEE\n    // If activity modifier exists\n      if (activity) {\n          tdee = bmr * activity;\n      } else {\n          tdee = bmr;\n      }\n    // If tdee modifier exists\n      if (type === 'surplus') {\n          tdee = tdee + (tdee * modifier);\n      } else if (type === 'deficit') {\n          tdee = tdee - (tdee * modifier);\n      }\n  }\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-6\">\n        <TdeeModifier tdee={tdee} value={type} onSelect={handleSelect} onInput={handleInput} />\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">\n            LBM: <strong>{lbm ? `${parseInt(lbm)} lbs` : ''}</strong>\n          </li>\n          <li className=\"list-group-item\">\n            BMR: <strong>{bmr ? `${parseInt(bmr)} cals` : ''}</strong>\n          </li>\n          <li className=\"list-group-item\">\n            TDEE: <strong style={{color:\"red\"}}>{tdee ? `${parseInt(tdee)} cals` : ''}</strong>\n          </li>\n        </ul>\n      </div>\n     <div className=\"col-md-6\">\n        <MacroSliders tdee={tdee} />\n      </div>\n    </div>\n  );\n}\n\nexport default BodyResults;","import React, { useState } from 'react';\nimport WeightInput from './WeightInput';\nimport BodyFatInput from './BodyFatInput';\nimport ActivityInput from './ActivityInput';\nimport BodyResults from './BodyResults';\n\nconst App = () => {\n  const [weight, setWeight] = useState('');\n  const [bodyFat, setBodyFat] = useState('');\n  const [activity, setActivity] = useState(1);\n\n  const handleWeightInput = event => {\n    setWeight(event.target.value);\n  }\n  const handleBodyFatInput = event => {\n    setBodyFat(event.target.value);\n  }\n  const handleActivityInput = event => {\n    setActivity(event.target.value);\n  }\n  return (\n    <div className=\"container\" style={{maxWidth:\"800px\"}}>\n      <h1 style={{textAlign:\"center\", margin:\"20px 0 30px 0\"}}>Calorie Calculator</h1>\n      <div className=\"row\">\n        <div className=\"col-sm-6\">\n          <WeightInput value={weight} onChange={handleWeightInput} />\n          <BodyFatInput value={bodyFat} onChange={handleBodyFatInput} />\n        </div>\n        <div className=\"col-sm-6 center-vert\">\n          <ActivityInput activity={activity} onChange={handleActivityInput} />\n        </div>\n      </div>\n      <BodyResults weight={weight} bodyFat={bodyFat} activity={activity} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}