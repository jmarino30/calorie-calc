{"version":3,"sources":["components/WeightInput.js","components/BodyFatInput.js","components/ActivityInput.js","components/TdeeModifier.js","components/MacroSliders.js","components/BodyResults.js","components/App.js","index.js"],"names":["WeightInput","props","className","htmlFor","type","inputMode","pattern","value","onChange","BodyFatInput","ActivityInput","renderActivityInformation","activity","this","step","style","margin","float","orient","min","max","React","Component","TdeeModifier","marginBottom","marginRight","cursor","onSelect","data-toggle","aria-haspopup","aria-expanded","onInput","aria-label","MacroSliders","state","carbsPercentage","fatPercentage","proteinPercentage","width","setWindowWidth","setState","window","innerWidth","renderProteinSlider","protein","classes","warning","handleProteinSlider","renderCarbsSlider","carbs","handleCarbsSlider","renderFatSlider","fat","handleFatSlider","event","percentLeft","parseInt","target","addEventListener","tdee","console","log","BodyResults","modifier","handleSelect","handleInput","lbm","bmr","weight","bodyFat","weightLBS","color","App","handleWeightInput","handleBodyFatInput","handleActivityInput","maxWidth","textAlign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a35fc1f6.chunk.js","sourcesContent":["import React from 'react';\n\nconst WeightInput = props => {\n    return (\n        <div className=\"form-group col-xs-6\">\n            <label htmlFor=\"weight\">Weight (lbs):</label>\n            <input \n                type=\"number\" inputMode=\"numeric\" pattern=\"[0-9]*\"\n                className=\"form-control\" \n                value={props.value} \n                onChange={props.onChange} />\n        </div>\n    );\n}\n\nexport default WeightInput;","import React from 'react';\n\nconst BodyFatInput = props => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor=\"body-fat\">Body Fat Percentage (%):</label>\n            <input \n                type=\"number\" inputMode=\"numeric\" pattern=\"[0-9]*\"\n                className=\"form-control\" \n                value={props.value} \n                onChange={props.onChange} />\n        </div>\n    );\n}\n\nexport default BodyFatInput;","import React from 'react';\nimport './style.css';\n\nclass ActivityInput extends React.Component {\n\n    renderActivityInformation = (activity) => {\n        if (activity >= 1 && activity <= 1.2) {\n            return <small className=\"text-danger\"><strong>Sedentary:</strong> Little or no exercise</small>;\n        } else if (activity > 1.2 && activity <= 1.375) {\n            return <small className=\"text-danger\"><strong>Lightly Active:</strong> Light exercise/sports 1 to 3 days per week</small>;\n        } else if (activity > 1.375 && activity <= 1.55) {\n            return <small className=\"text-danger\"><strong>Moderately Active:</strong> Moderate exercise/sports 3 to 5 days per week</small>;\n        } else if (activity > 1.55 && activity <= 1.725) {\n            return <small className=\"text-danger\"><strong>Very Active:</strong> Hard exercise/sports 6 to 7 days per week</small>;\n        } else if (activity > 1.725 && activity <= 1.9) {\n            return <small className=\"text-danger\"><strong>Extremely Active:</strong> Very hard exercise/sports 6 to 7 days per week &amp; physical job</small>;\n        } else {\n            return <small className=\"text-danger\"><strong>Recommended value between 1 and 1.9</strong></small>;\n        }\n    }\n    render() {\n        return (\n            <div className=\"form-group\">\n                <label htmlFor=\"activity-level\">Activity Level: </label>\n                <input \n                    type=\"number\" \n                    className=\"form-control\" \n                    value={this.props.activity} \n                    onChange={this.props.onChange}\n                    step=\"0.1\" />\n                <div style={{margin:\"25px 0\"}} className=\"col-sm center-vert\">\n                    <input style={{float:\"left\"}}\n                        type=\"range\" \n                        orient=\"vertical\" \n                        value={this.props.activity}\n                        min=\"1\"\n                        max=\"1.95\"\n                        step=\"0.025\"\n                        onChange={this.props.onChange}\n                        />\n                    <ul className=\"small center-vert\">\n                        <li className={this.props.activity > 1.75 && this.props.activity <= 1.99 ? 'selected' : null}>\n                            <strong>1.9 = Extremely Active<br /></strong>\n                            {this.props.activity > 1.75 && this.props.activity <= 1.99 ? '10+ hours of exercise or sports per week' : null}\n                        </li>\n                        <li className={this.props.activity > 1.55 && this.props.activity <= 1.75 ? 'selected' : null}>\n                            <strong>1.7 = Very Active<br /></strong>\n                            {this.props.activity > 1.55 && this.props.activity <= 1.75 ? '7 to 9 hours of exercise or sports per week' : null}\n                        </li>\n                        <li className={this.props.activity > 1.35 && this.props.activity <= 1.55 ? 'selected' : null}>\n                            <strong>1.45 = Moderately Active<br /></strong>\n                            {this.props.activity > 1.35 && this.props.activity <= 1.55 ? '4 to 6 hours of exercise or sports per week' : null}\n                        </li>\n                        <li className={this.props.activity > 1.15 && this.props.activity <= 1.35 ? 'selected' : null}>\n                            <strong>1.3 = Lightly Active<br /></strong>{this.props.activity > 1.15 && this.props.activity <= 1.35 ? '1 to 3 hours of exercise or sports per week' : null}\n                        </li>\n                        <li className={this.props.activity <= 1.15 ? 'selected' : null}>\n                            <strong>1.15 = Sedentary<br /></strong>\n                            {this.props.activity <= 1.15 ? 'Little to no exercise or sports per week' : null}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ActivityInput;\n","import React from 'react';\n\nconst TdeeModifier = props => {\n    return (\n        <div className=\"input-group\" style={{marginBottom:'20px'}}>\n            <div className=\"input-group-prepend\">\n                <select style={{marginRight:'10px', cursor:'pointer'}} value={props.value} onChange={props.onSelect} className=\"btn btn-outline-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    <option className=\"dropdown-item\" value=\"surplus\">Surplus (Bulking)</option>\n                    <option className=\"dropdown-item\" value=\"deficit\">Deficit (Cutting)</option>\n                </select>\n                <span className=\"input-group-text rounded-left\">{props.value === 'surplus' ? '+' : '-'}</span>\n            </div>\n            <input onChange={props.onInput} type=\"number\" inputMode=\"numeric\" pattern=\"[0-9]*\" className=\"form-control\" aria-label=\"Surplus Deficit Amount\" />\n            <div className=\"input-group-append\">\n                <span className=\"input-group-text\">%</span>\n            </div>\n        </div>\n    );\n}\n\nexport default TdeeModifier;","import React from 'react';\nimport './macroSliders.css';\n\nclass MacroSliders extends React.Component {\n    state = {\n        carbsPercentage: 35,\n        fatPercentage: 30,\n        proteinPercentage: 35,\n        width: 0\n    }\n    componentDidMount() {\n        this.setWindowWidth();\n        window.addEventListener('resize', this.setWindowWidth);\n    }\n    setWindowWidth = () => {\n        this.setState({width: window.innerWidth}) \n    }\n    renderProteinSlider = (protein, proteinPercentage) => {\n        let classes = \"form-group alert\";\n        let warning = false;\n        if (proteinPercentage < 30 || proteinPercentage > 55) {\n            classes = \"form-group alert alert-danger\";\n            warning = true;\n        }\n        return (\n            <div className={classes} >\n                <label htmlFor=\"formControlRange\">\n                    Protein <strong>{protein ? `${protein}g (${proteinPercentage}%)` : '0g'}\n                    </strong>\n                    {warning ? <small>{this.state.width > 400 ? ' *Recommended' : ' *Rec.'} 30-55%</small> : ''}\n            </label>\n            <input \n                min=\"0\" \n                max=\"100\"\n                value={proteinPercentage}\n                onChange={this.handleProteinSlider} \n                type=\"range\" \n                className=\"form-control-range\"\n            />\n            </div>\n        );\n    }\n    renderCarbsSlider = (carbs, carbsPercentage) => {\n        let classes = \"form-group alert\";\n        let warning = false;\n        if (carbsPercentage < 30 || carbsPercentage > 55) {\n            classes = \"alert alert-danger\";\n            warning = true;\n        }\n        return (\n            <div className={classes}>\n                <label htmlFor=\"formControlRange\">\n                    Carbs <strong>{carbs ? `${carbs}g (${carbsPercentage}%)` : '0g'}</strong>\n                    {warning ? <small>{this.state.width > 400 ? ' *Recommended' : ' *Rec.'} 30-55%</small> : ''}\n            </label>\n            <input \n                min=\"0\" \n                max=\"100\"\n                value={carbsPercentage}\n                onChange={this.handleCarbsSlider} \n                type=\"range\" \n                className=\"form-control-range\"\n            />\n            </div>\n        );\n    }\n    renderFatSlider = (fat, fatPercentage) => {\n        let classes = \"form-group alert\";\n        let warning = false;\n        if (fatPercentage < 10 || fatPercentage > 35) {\n            classes = \"alert alert-danger\";\n            warning = true;\n        }\n        return (\n            <div className={classes}>\n                <label  htmlFor=\"formControlRange\">\n                    Fat <strong>{fat ? `${fat}g (${fatPercentage}%)` : '0g'}</strong>\n                    {warning ? <small>{this.state.width > 400 ? ' *Recommended' : ' *Rec.'} 10-35%</small> : ''}\n            </label>\n            <input \n                min=\"0\" \n                max=\"100\"\n                value={fatPercentage}\n                onChange={this.handleFatSlider} \n                type=\"range\" \n                className=\"form-control-range\"\n            />\n            </div>\n        );\n    }\n    handleProteinSlider = event => {\n        let percentLeft = 100;\n        const proteinPercentage = parseInt(event.target.value);\n        percentLeft -= proteinPercentage;\n        const carbsPercentage = parseInt(percentLeft * .65);\n        const fatPercentage = parseInt(percentLeft * .35);\n        this.setState({ proteinPercentage, carbsPercentage, fatPercentage });\n    }\n    handleCarbsSlider = event => {\n        let percentLeft = 100;\n        const carbsPercentage = parseInt(event.target.value);\n        percentLeft -= carbsPercentage;\n        const proteinPercentage = parseInt(percentLeft * .65);\n        const fatPercentage = parseInt(percentLeft * .35);\n        this.setState({ proteinPercentage, carbsPercentage, fatPercentage });\n    }\n    handleFatSlider = event => {\n        let percentLeft = 100;\n        const fatPercentage = parseInt(event.target.value);\n        percentLeft -= fatPercentage;\n        const proteinPercentage = parseInt(percentLeft * .55);\n        const carbsPercentage = parseInt(percentLeft * .45);\n        this.setState({ proteinPercentage, carbsPercentage, fatPercentage });\n    }\n    render() {\n        const fat = this.props.tdee * (this.state.fatPercentage/100) / 9;\n        const carbs = this.props.tdee * (this.state.carbsPercentage/100) / 4;\n        const protein = this.props.tdee * (this.state.proteinPercentage/100) / 4;\n        console.log('state', this.state.width)\n        return (\n            <div>\n                {this.renderFatSlider(parseInt(fat), this.state.fatPercentage)}\n                {this.renderCarbsSlider(parseInt(carbs), this.state.carbsPercentage)}\n                {this.renderProteinSlider(parseInt(protein), this.state.proteinPercentage)}\n            </div>\n        );\n    }\n}\n\nexport default MacroSliders;","import React from 'react';\nimport TdeeModifier from './TdeeModifier';\nimport MacroSliders from './MacroSliders';\n\nclass BodyResults extends React.Component {\n    state = {\n        type: 'surplus',\n        modifier: ''\n    }\n    handleSelect = event => {\n        if (event.target.value === 'surplus') {\n            this.setState({ type: 'surplus' });\n        } else if (event.target.value === 'deficit') {\n            this.setState({ type: 'deficit' })\n        }\n    }\n    handleInput = event => {\n        const modifier = event.target.value / 100;\n        this.setState({ modifier });\n    }\n    render() {\n        let lbm, bmr, tdee = '';\n        if (this.props.weight && this.props.bodyFat) {\n            // Calculate lean body mass\n            const weightLBS = this.props.weight;\n            const bodyFatDecimal = this.props.bodyFat / 100;\n            lbm = weightLBS - ( weightLBS * bodyFatDecimal);\n            // Calculate BMR\n            const leanBodyMassKG = lbm / 2.2046;\n            bmr = 370 + 21.6 * leanBodyMassKG;\n            // Calculate TDEE\n            // If activity modifier exists\n            if (this.props.activity) {\n                tdee = bmr * this.props.activity;\n            } else {\n                tdee = bmr;\n            }\n            // If tdee modifier exists\n            if (this.state.type === 'surplus') {\n                tdee = tdee + (tdee * this.state.modifier);\n            } else if (this.state.type === 'deficit') {\n                tdee = tdee - (tdee * this.state.modifier);\n            }\n        }\n\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <TdeeModifier tdee={tdee} value={this.state.type} onSelect={this.handleSelect} onInput={this.handleInput} />\n                    <ul className=\"list-group list-group-flush\">\n                        <li className=\"list-group-item\">\n                        LBM: <strong>{lbm ? `${parseInt(lbm)} lbs` : ''}</strong>\n                        </li>\n                        <li className=\"list-group-item\">\n                        BMR: <strong>{bmr ? `${parseInt(bmr)} cals` : ''}</strong>\n                        </li>\n                        <li className=\"list-group-item\">\n                        TDEE: <strong style={{color:\"red\"}}>{tdee ? `${parseInt(tdee)} cals` : ''}</strong>\n                        </li>\n                    </ul>\n                </div>\n            <div className=\"col-md-6\">\n                <MacroSliders tdee={tdee} />\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default BodyResults;","import React from 'react';\nimport WeightInput from './WeightInput';\nimport BodyFatInput from './BodyFatInput';\nimport ActivityInput from './ActivityInput';\nimport BodyResults from './BodyResults';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            weight:'',\n            bodyFat:'',\n            activity: 1\n        }\n    }\n    handleWeightInput = event => {\n        this.setState({ weight: event.target.value });\n    }\n    handleBodyFatInput = event => {\n        this.setState({ bodyFat: event.target.value });\n    }\n    handleActivityInput = event => {\n        this.setState({ activity: event.target.value });\n    }\n    render() {\n        const {weight, bodyFat, activity} = this.state;\n        return (\n            <div className=\"container\" style={{maxWidth:\"800px\"}}>\n                <h1 style={{textAlign:\"center\", margin:\"20px 0 30px 0\"}}>Calorie Calculator</h1>\n                <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <WeightInput value={weight} onChange={this.handleWeightInput} />\n                        <BodyFatInput value={bodyFat} onChange={this.handleBodyFatInput} />\n                    </div>\n                    <div className=\"col-sm-6 center-vert\">\n                        <ActivityInput activity={activity} onChange={this.handleActivityInput} />\n                    </div>\n                </div>\n                <BodyResults weight={weight} bodyFat={bodyFat} activity={activity} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n//fix number inputs mobile keyboards\n//fix carbs slider from moving on mobile\n\n// fix entire layout, make inputs much smaller, use bootstrap grid better","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}