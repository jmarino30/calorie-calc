{"version":3,"sources":["components/WeightInput.js","components/BodyFatInput.js","components/ActivityInput.js","components/TdeeModifier.js","components/MacroSliders.js","components/BodyResults.js","components/App.js","index.js"],"names":["WeightInput","props","className","htmlFor","type","inputMode","pattern","value","onChange","BodyFatInput","ActivityInput","renderActivityInformation","activity","this","step","style","margin","float","orient","min","max","React","Component","TdeeModifier","marginBottom","marginRight","cursor","width","onSelect","data-toggle","aria-haspopup","aria-expanded","fontFamily","textAlign","onInput","aria-label","MacroSliders","state","carbsPercentage","fatPercentage","proteinPercentage","setWindowWidth","setState","window","innerWidth","renderProteinSlider","protein","classes","warning","handleProteinSlider","renderCarbsSlider","carbs","handleCarbsSlider","renderFatSlider","fat","handleFatSlider","event","percentLeft","parseInt","target","addEventListener","tdee","console","log","BodyResults","modifier","handleSelect","handleInput","lbm","bmr","weight","bodyFat","weightLBS","color","App","handleWeightInput","handleBodyFatInput","handleActivityInput","maxWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c5f2dab.chunk.js","sourcesContent":["import React from 'react';\n\nconst WeightInput = props => {\n    return (\n        <div className=\"form-group col-xs-6\">\n            <label htmlFor=\"weight\">Weight (lbs):</label>\n            <input \n                type=\"number\" inputMode=\"numeric\" pattern=\"[0-9]*\"\n                className=\"form-control\" \n                value={props.value} \n                onChange={props.onChange} />\n        </div>\n    );\n}\n\nexport default WeightInput;","import React from 'react';\n\nconst BodyFatInput = props => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor=\"body-fat\">Body Fat Percentage (%):</label>\n            <input \n                type=\"number\" inputMode=\"numeric\" pattern=\"[0-9]*\"\n                className=\"form-control\" \n                value={props.value} \n                onChange={props.onChange} />\n        </div>\n    );\n}\n\nexport default BodyFatInput;","import React from 'react';\nimport './style.css';\n\nclass ActivityInput extends React.Component {\n\n    renderActivityInformation = (activity) => {\n        if (activity >= 1 && activity <= 1.2) {\n            return <small className=\"text-danger\"><strong>Sedentary:</strong> Little or no exercise</small>;\n        } else if (activity > 1.2 && activity <= 1.375) {\n            return <small className=\"text-danger\"><strong>Lightly Active:</strong> Light exercise/sports 1 to 3 days per week</small>;\n        } else if (activity > 1.375 && activity <= 1.55) {\n            return <small className=\"text-danger\"><strong>Moderately Active:</strong> Moderate exercise/sports 3 to 5 days per week</small>;\n        } else if (activity > 1.55 && activity <= 1.725) {\n            return <small className=\"text-danger\"><strong>Very Active:</strong> Hard exercise/sports 6 to 7 days per week</small>;\n        } else if (activity > 1.725 && activity <= 1.9) {\n            return <small className=\"text-danger\"><strong>Extremely Active:</strong> Very hard exercise/sports 6 to 7 days per week &amp; physical job</small>;\n        } else {\n            return <small className=\"text-danger\"><strong>Recommended value between 1 and 1.9</strong></small>;\n        }\n    }\n    render() {\n        return (\n            <div className=\"form-group\">\n                <label htmlFor=\"activity-level\">Activity Level: </label>\n                <input \n                    type=\"number\" \n                    className=\"form-control\" \n                    value={this.props.activity} \n                    onChange={this.props.onChange}\n                    step=\"0.1\" />\n                <div style={{margin:\"25px 0\"}} className=\"col-sm center-vert\">\n                    <input style={{float:\"left\"}}\n                        type=\"range\" \n                        orient=\"vertical\" \n                        value={this.props.activity}\n                        min=\"1\"\n                        max=\"1.95\"\n                        step=\"0.025\"\n                        onChange={this.props.onChange}\n                        />\n                    <ul className=\"small center-vert\">\n                        <li className={this.props.activity > 1.75 && this.props.activity <= 1.99 ? 'selected' : null}>\n                            <strong>1.9 = Extremely Active<br /></strong>\n                            {this.props.activity > 1.75 && this.props.activity <= 1.99 ? '10+ hours of exercise or sports per week' : null}\n                        </li>\n                        <li className={this.props.activity > 1.55 && this.props.activity <= 1.75 ? 'selected' : null}>\n                            <strong>1.7 = Very Active<br /></strong>\n                            {this.props.activity > 1.55 && this.props.activity <= 1.75 ? '7 to 9 hours of exercise or sports per week' : null}\n                        </li>\n                        <li className={this.props.activity > 1.35 && this.props.activity <= 1.55 ? 'selected' : null}>\n                            <strong>1.45 = Moderately Active<br /></strong>\n                            {this.props.activity > 1.35 && this.props.activity <= 1.55 ? '4 to 6 hours of exercise or sports per week' : null}\n                        </li>\n                        <li className={this.props.activity > 1.15 && this.props.activity <= 1.35 ? 'selected' : null}>\n                            <strong>1.3 = Lightly Active<br /></strong>{this.props.activity > 1.15 && this.props.activity <= 1.35 ? '1 to 3 hours of exercise or sports per week' : null}\n                        </li>\n                        <li className={this.props.activity <= 1.15 ? 'selected' : null}>\n                            <strong>1.15 = Sedentary<br /></strong>\n                            {this.props.activity <= 1.15 ? 'Little to no exercise or sports per week' : null}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ActivityInput;\n","import React from 'react';\n\nconst TdeeModifier = props => {\n    return (\n        <div className=\"row\">\n            <div className=\"col-7\">\n                <div className=\"input-group\" style={{marginBottom:'20px'}}>\n                    <select style={{marginRight:'10px', cursor:'pointer', width:\"100%\"}} value={props.value} onChange={props.onSelect} className=\"custom-select\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <option className=\"dropdown-item\" value=\"none\">No Preset (Maintaining)</option>\n                        <option className=\"dropdown-item\" value=\"surplus\">Surplus (Bulking)</option>\n                        <option className=\"dropdown-item\" value=\"deficit\">Deficit (Cutting)</option>\n                    </select>\n                </div>\n            </div>\n            {props.value === 'none' ? null : \n            <div className=\"col\">\n                <div className=\"input-group\" style={{marginBottom:'20px'}}>\n                    <div className=\"input-group-prepend\">\n                        <span \n                            style={{fontFamily:\"monospace\"}} \n                            className={props.value === 'surplus' ? \"input-group-text rounded-left surplus\" \n                                : \"input-group-text rounded-left deficit\"}>\n                            {props.value === 'none' ? '' : props.value === 'surplus' ? '+' : '-'}\n                        </span>\n                    </div>\n                    <input \n                        style={{textAlign:'center'}} onChange={props.onInput} \n                        type=\"number\" inputMode=\"numeric\" pattern=\"[0-9]*\" \n                        className={props.value === 'surplus' ? \"form-control surplus\" \n                            : \"form-control deficit\"}\n                        aria-label=\"Surplus Deficit Amount\" />\n                    <div className=\"input-group-append\">\n                        <span \n                            className={props.value === 'surplus' ? \"input-group-text surplus\" \n                            : \"input-group-text deficit\"}>\n                                %\n                        </span>\n                    </div>\n                </div>\n            </div>\n            }\n        </div>\n    );\n}\n\nexport default TdeeModifier;","import React from 'react';\nimport './macroSliders.css';\n\nclass MacroSliders extends React.Component {\n    state = {\n        carbsPercentage: 35,\n        fatPercentage: 30,\n        proteinPercentage: 35,\n        width: 0\n    }\n    componentDidMount() {\n        this.setWindowWidth();\n        window.addEventListener('resize', this.setWindowWidth);\n    }\n    setWindowWidth = () => {\n        this.setState({width: window.innerWidth}) \n    }\n    renderProteinSlider = (protein, proteinPercentage) => {\n        let classes = \"form-group alert\";\n        let warning = false;\n        if (proteinPercentage < 30 || proteinPercentage > 55) {\n            classes = \"form-group alert alert-danger\";\n            warning = true;\n        }\n        return (\n            <div className={classes} >\n                <label htmlFor=\"formControlRange\">\n                    Protein <strong>{protein ? `${protein}g (${proteinPercentage}%)` : '0g'}\n                    </strong>\n                    {warning ? <small>{this.state.width > 400 ? ' *Recommended' : ' *Rec.'} 30-55%</small> : ''}\n            </label>\n            <input \n                min=\"0\" \n                max=\"100\"\n                value={proteinPercentage}\n                onChange={this.handleProteinSlider} \n                type=\"range\" \n                className=\"form-control-range\"\n            />\n            </div>\n        );\n    }\n    renderCarbsSlider = (carbs, carbsPercentage) => {\n        let classes = \"form-group alert\";\n        let warning = false;\n        if (carbsPercentage < 30 || carbsPercentage > 55) {\n            classes = \"alert alert-danger\";\n            warning = true;\n        }\n        return (\n            <div className={classes}>\n                <label htmlFor=\"formControlRange\">\n                    Carbs <strong>{carbs ? `${carbs}g (${carbsPercentage}%)` : '0g'}</strong>\n                    {warning ? <small>{this.state.width > 400 ? ' *Recommended' : ' *Rec.'} 30-55%</small> : ''}\n            </label>\n            <input \n                min=\"0\" \n                max=\"100\"\n                value={carbsPercentage}\n                onChange={this.handleCarbsSlider} \n                type=\"range\" \n                className=\"form-control-range\"\n            />\n            </div>\n        );\n    }\n    renderFatSlider = (fat, fatPercentage) => {\n        let classes = \"form-group alert\";\n        let warning = false;\n        if (fatPercentage < 10 || fatPercentage > 35) {\n            classes = \"alert alert-danger\";\n            warning = true;\n        }\n        return (\n            <div className={classes}>\n                <label  htmlFor=\"formControlRange\">\n                    Fat <strong>{fat ? `${fat}g (${fatPercentage}%)` : '0g'}</strong>\n                    {warning ? <small>{this.state.width > 400 ? ' *Recommended' : ' *Rec.'} 10-35%</small> : ''}\n            </label>\n            <input \n                min=\"0\" \n                max=\"100\"\n                value={fatPercentage}\n                onChange={this.handleFatSlider} \n                type=\"range\" \n                className=\"form-control-range\"\n            />\n            </div>\n        );\n    }\n    handleProteinSlider = event => {\n        let percentLeft = 100;\n        const proteinPercentage = parseInt(event.target.value);\n        percentLeft -= proteinPercentage;\n        const carbsPercentage = parseInt(percentLeft * .65);\n        const fatPercentage = parseInt(percentLeft * .35);\n        this.setState({ proteinPercentage, carbsPercentage, fatPercentage });\n    }\n    handleCarbsSlider = event => {\n        let percentLeft = 100;\n        const carbsPercentage = parseInt(event.target.value);\n        percentLeft -= carbsPercentage;\n        const proteinPercentage = parseInt(percentLeft * .65);\n        const fatPercentage = parseInt(percentLeft * .35);\n        this.setState({ proteinPercentage, carbsPercentage, fatPercentage });\n    }\n    handleFatSlider = event => {\n        let percentLeft = 100;\n        const fatPercentage = parseInt(event.target.value);\n        percentLeft -= fatPercentage;\n        const proteinPercentage = parseInt(percentLeft * .55);\n        const carbsPercentage = parseInt(percentLeft * .45);\n        this.setState({ proteinPercentage, carbsPercentage, fatPercentage });\n    }\n    render() {\n        const fat = this.props.tdee * (this.state.fatPercentage/100) / 9;\n        const carbs = this.props.tdee * (this.state.carbsPercentage/100) / 4;\n        const protein = this.props.tdee * (this.state.proteinPercentage/100) / 4;\n        console.log('state', this.state.width)\n        return (\n            <div>\n                {this.renderFatSlider(parseInt(fat), this.state.fatPercentage)}\n                {this.renderCarbsSlider(parseInt(carbs), this.state.carbsPercentage)}\n                {this.renderProteinSlider(parseInt(protein), this.state.proteinPercentage)}\n            </div>\n        );\n    }\n}\n\nexport default MacroSliders;","import React from 'react';\nimport TdeeModifier from './TdeeModifier';\nimport MacroSliders from './MacroSliders';\n\nclass BodyResults extends React.Component {\n    state = {\n        type: 'none',\n        modifier: ''\n    }\n    handleSelect = event => {\n        if (event.target.value === 'surplus') {\n            this.setState({ type: 'surplus' });\n        } else if (event.target.value === 'deficit') {\n            this.setState({ type: 'deficit' })\n        } else if (event.target.value === 'none') {\n            this.setState({ type: 'none' });\n            this.setState({ modifier: '' });\n        }\n    }\n    handleInput = event => {\n        const modifier = event.target.value / 100;\n        this.setState({ modifier });\n    }\n    render() {\n        let lbm, bmr, tdee = '';\n        if (this.props.weight && this.props.bodyFat) {\n            // Calculate lean body mass\n            const weightLBS = this.props.weight;\n            const bodyFatDecimal = this.props.bodyFat / 100;\n            lbm = weightLBS - ( weightLBS * bodyFatDecimal);\n            // Calculate BMR\n            const leanBodyMassKG = lbm / 2.2046;\n            bmr = 370 + 21.6 * leanBodyMassKG;\n            // Calculate TDEE\n            // If activity modifier exists\n            if (this.props.activity) {\n                tdee = bmr * this.props.activity;\n            } else {\n                tdee = bmr;\n            }\n            // If tdee modifier exists\n            if (this.state.type === 'surplus') {\n                tdee = tdee + (tdee * this.state.modifier);\n            } else if (this.state.type === 'deficit') {\n                tdee = tdee - (tdee * this.state.modifier);\n            }\n        }\n\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <TdeeModifier tdee={tdee} value={this.state.type} onSelect={this.handleSelect} onInput={this.handleInput} />\n                    <ul className=\"list-group list-group-flush\">\n                        <li className=\"list-group-item\">\n                        LBM: <strong>{lbm ? `${parseInt(lbm)} lbs` : ''}</strong>\n                        </li>\n                        <li className=\"list-group-item\">\n                        BMR: <strong>{bmr ? `${parseInt(bmr)} cals` : ''}</strong>\n                        </li>\n                        <li className=\"list-group-item\">\n                        TDEE: <strong style={{color:\"red\"}}>{tdee ? `${parseInt(tdee)} cals` : ''}</strong>\n                        </li>\n                    </ul>\n                </div>\n            <div className=\"col-md-6\">\n                <MacroSliders tdee={tdee} />\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default BodyResults;","import React from 'react';\nimport WeightInput from './WeightInput';\nimport BodyFatInput from './BodyFatInput';\nimport ActivityInput from './ActivityInput';\nimport BodyResults from './BodyResults';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            weight:'',\n            bodyFat:'',\n            activity: 1\n        }\n    }\n    handleWeightInput = event => {\n        this.setState({ weight: event.target.value });\n    }\n    handleBodyFatInput = event => {\n        this.setState({ bodyFat: event.target.value });\n    }\n    handleActivityInput = event => {\n        this.setState({ activity: event.target.value });\n    }\n    render() {\n        const {weight, bodyFat, activity} = this.state;\n        return (\n            <div className=\"container\" style={{maxWidth:\"800px\"}}>\n                <h1 style={{textAlign:\"center\", margin:\"20px 0 30px 0\"}}>Calorie Calculator</h1>\n                <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <WeightInput value={weight} onChange={this.handleWeightInput} />\n                        <BodyFatInput value={bodyFat} onChange={this.handleBodyFatInput} />\n                    </div>\n                    <div className=\"col-sm-6 center-vert\">\n                        <ActivityInput activity={activity} onChange={this.handleActivityInput} />\n                    </div>\n                </div>\n                <BodyResults weight={weight} bodyFat={bodyFat} activity={activity} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n//fix number inputs mobile keyboards\n//fix carbs slider from moving on mobile\n\n// fix entire layout, make inputs much smaller, use bootstrap grid better","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}